/*===========================================================================+
|  Class    : CtmControl_Error		                                         |
|  Task     : Alarm Server Function 				    	         		 |
|----------------------------------------------------------------------------|
|  Compile  : G++(GCC)3.2                                                    |
|  Link     : G++(GCC)3.2                                                    |
|  Call     :                                                                |
|----------------------------------------------------------------------------|
|  Author   : James	                                                         |
|  Version  : V1.00                                                          |
|  Creation : 05/11/2008	                                                 |
|  Revision : 05/11/2008				                                     |
+===========================================================================*/
#ifndef	D_CTMCONTROL_ERROR
#define	D_CTMCONTROL_ERROR
#include	"../../tmcontrol.h"
#include	"../../tmpackclass.h"
#include	"../../package.h"

#define 		ERRORLISTMAX_NUM	20

#define		ERROR_OBJECT_55ERROR2		4       //55
#define		ERROR_OBJECT_M3ERROR		0x59	//M3

typedef struct tagtmErrorInfo
{
	WORD				wSource;
	WORD				wGrade;
	DWORD				dwErrorID;
	tagtmErrorInfo*		pNext;
} tmErrorInfo;

class	CtmControl_Error: public	CtmControl
{
	DECLARE_DYNCREATE(CtmControl_Error)
	public:
		CtmControl_Error();
		~CtmControl_Error();
		
	public:
		/*virtual*///BOOL    		AddErrorLog(WORD wID)					;
		/*virtual*/BOOL    		Robot_AddErrorLog(WORD wID , WORD wGroup)
		/*virtual*/BOOL    		AddErrorLog(DWORD dwID, WORD	wSource = tmOIL_ERRORFLAG);
		/*virtual*/BOOL    		ClearErrorLog()							;
		/*virtual*/void	   		Destroy_ErrorLog()						;
		/*virtual*/void    		Error_Control()							;
							 void    		Error_Control2_New()							;   //JOYCE2011-4-13 
		/*virtual*/BOOL    		FixErrorLog(DWORD dwID, WORD	wSource = tmOIL_ERRORFLAG);
		/*virtual*/void /*tmDB_ERROR*/*	GetErrorIndex()					;
		/*virtual*/void /*tmDB_ERROR*/*	GetErrorLog(int nIndex)			;
		/*virtual*/WORD        	GetErrorLogCount()						;
		/*virtual*/void			Init_ErrorLog()							;						
		void			BackupErrorLog();
		void			RevertErrorLog();
		/*virtual*/void			Rs485Error_Control_New()					;
		/*virtual*/int			ParseErrorID(char* pszErrorStr, DWORD dwErrorID);//Caozz 2011/4/14 上午 11:34:55
						   int			ErrorIDToStr(char* szTemp, char* szStrID ,WORD wErrorID, WORD *pwDst);			
		void					Dsp28Error_Control()					;
		void					N2CError_Control()						;
		void	 				RollError();
		BOOL 					ChangeErrorList(DWORD dwErrorID, WORD wSource, WORD wGrade, int nFlag);
		
		void    				Error_Control_New()						;
		//void					Error_Control_55M3();
		void					Error_Control_Card();
		void					Rbt485Error_Control();
	private:
		pthread_mutex_t					m_MutexErrMsg;				//多線程鎖
		static	tmDB_ERROR			m_MsgCurrent;				//當前警報
		static	tmDB_ERROR			m_MsgIndex;					//記錄當前最新的個數和序號
		
		//tmErrorInfo			m_ErrorList[ERRORLISTMAX_NUM];			//Caozz add 2011/3/30 下午 05:03:21 ErrorList
		tmErrorInfo*		m_ErrorListHead;			
		tmErrorInfo*		m_ErrorListCurrent;

		static	int			m_nErrorCount;				//
		static	char*		m_pszError[64];
		
		int							m_iRealIndex;
	public:
		//====================
		//	override the function that are defined in the CtmPackClass
		//====================
		int		CreateSelf();
		int		FreeSelf();
};


#ifndef	D_BEOBJECT_CTMCONTROL_ERROR	//	defineName=D_BEOBJECT_+CASE(ClassName) 
extern	"C"	CObject*	CreateInstance(char* Name);
extern	"C"	void		ReleaseInstance(CObject* pInstance);
#endif

#endif

